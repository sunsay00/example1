(module ledger (ledger)
  (import scheme)

  (define ledger '(
    (v1.0
      (create-scalar Email)
      (create-scalar DateTime)
      (create-scalar Point)

      (create-type UserFields) ; used for unit testing
      (type-add-field UserFields name (Optional String))
      (type-add-field UserFields avatarUri (Optional String))

      (create-model User users) ; used for unit testing
      (model-add-unique-field User sub String)
      (model-add-field User fields UserFields)
      (model-add-field User locale String)
      (model-add-field User region String)
      (model-add-db-set-method User Create User ((sub String) (fields UserFields) (locale String) (region String))
                               (config (command (insert (sub 'sub) (fields 'fields) (locale 'locale) (region 'region))
                                                (return id sub fields locale region))))
      (model-add-db-get-method User Find (Array User) ((after (Optional String)) (count (Optional Int) 50))
                               (config (orderby descending)
                                       (command (select id sub fields locale region)
                                                (where (= sub $sub)))))
      (model-add-get-method User #f FindAll (Array User) ((after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub fields locale region))))
      (model-add-db-get-method User FindById (Optional User) ((id String))
                               (config (command (select id sub fields locale region)
                                                (where (= id 'id)))))
      (model-add-db-get-method User FindByIdIn (Array User) ((ids (Array String)) (after (Optional String)) (count (Optional Int) 50))
                               (config (command (select id sub fields locale region)
                                                (where (in id 'ids)))))
      (model-add-db-get-method User FindBySub (Optional User) ((sub String))
                               (config (command (select id sub fields locale region)
                                                (where (= sub 'sub)))))
      (model-add-db-get-method User FindBySubIn (Array User) ((subs (Array String)) (after (Optional String)) (count (Optional Int) 50))
                               (config (command (select id sub fields locale region)
                                                (where (in sub 'subs)))))
      (model-add-db-set-method User Update (Optional User) ((id String) (fields (Optional UserFields)))
                               (config (command (update (= fields 'fields))
                                                (where (= id 'id))
                                                (return id sub fields locale region))))
      (model-add-db-set-method User Remove (Optional User) ((id String))
                               (config (command (delete)
                                                (where (and (= id 'id) (= sub $sub)))
                                                (return id sub fields locale region))))
      (model-add-get-custom-method User () Me User ())
      (model-add-set-custom-method User () UpdateMe User ((fields UserFields)) (config (command (update))))

      (create-type DeckCard) ; used for testing
      (type-add-field DeckCard name String)
      (type-add-field DeckCard value Int)

      (create-type PendingSeller)
      (type-add-field PendingSeller sub String)
      (type-add-field PendingSeller username String)
      (type-add-field PendingSeller email String)
      (type-add-field PendingSeller name String)

      (create-service System systems)
      (service-add-api-set-method System (__postconfirm__) PostConfirm Boolean ((locale String) (region String)))
      (service-add-get-method System #f GetChatToken String ((identity String) (pushChannel (Optional String) "none")))
      (service-add-set-method System (dealership) InviteUser Boolean ((newUsername String) (email String) (locale String) (dealershipId String)))
      (service-add-get-method System #f RateSeller (Optional Float) ((sellerId String) (rating Int)))
      (service-add-set-method System #f ExecuteTestCommand String ((command String)))

      (create-model DeckFactory deckFactories) ; used for testing
      (model-add-field DeckFactory name String)
      (model-add-field DeckFactory description (Optional String))
      (model-add-field DeckFactory location (Optional Point))
      (model-add-set-method DeckFactory () Create DeckFactory ((name String) (description (Optional String)) (location (Optional Point)))
                            (config (command (insert (name 'name) (description 'description) (location 'location))
                                             (return id name description location))))
      (model-add-set-method DeckFactory () Remove (Optional DeckFactory) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id name description location))))
      (model-add-get-method DeckFactory #f FindById (Optional DeckFactory) ((id String))
                            (config (orderby descending)
                                    (command (select id name description location)
                                             (where (= id 'id)))))
      (model-add-get-method DeckFactory () FindByIdIn (Array DeckFactory) ((ids (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (command (select id name description location)
                                             (where (in id 'ids)))))
      (model-add-get-method DeckFactory #f FindByLocation (Array DeckFactory) ((location Point) (radiusMiles Int) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id name description location)
                                             (where (<= (distanceSphere location 'location) (* 'radiusMiles 1609.34))))))

      (create-user-model Deck decks) ; used for testing
      (model-add-foreign-field Deck user (User sub fields sub))
      (model-add-foreign-field Deck factory (DeckFactory id ()))
      (model-add-field Deck cards (Array DeckCard))
      (model-add-field Deck expiresAt (Optional DateTime))
      (model-add-field Deck title (Optional String))
      (model-add-field Deck description (Optional String))
      (model-add-get-method Deck #f FindAll (Array Deck) ((after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt factoryId cards expiresAt title description))))
      (model-add-get-method Deck #f Find (Array Deck) ((after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt factoryId cards expiresAt title description)
                                             (where (= sub $sub)))))
      (model-add-get-method Deck #f FindById (Optional Deck) ((id String))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt factoryId cards expiresAt title description)
                                             (where (and (= id 'id) (= sub $sub))))))
      (model-add-set-method Deck () Create Deck ((factoryId String) (cards (Array DeckCard)) (expiresAt (Optional DateTime)) (title (Optional String)) (description (Optional String)))
                            (config (command (insert (sub $sub) (createdAt $now) (updatedAt $now) (factoryId 'factoryId) (cards 'cards) (expiresAt 'expiresAt) (title 'title) (description 'description))
                                             (return id sub createdAt updatedAt factoryId cards expiresAt title description))))
      (model-add-set-method Deck () Update (Optional Deck) ((id String) (cards (Array DeckCard)) (expiresAt (Optional DateTime)) (title (Optional String)) (description (Optional String)))
                            (config (command (update (= cards 'cards) (= expiresAt 'expiresAt) (= title 'title) (= description 'description))
                                             (where (and (= id 'id) (= sub $sub)))
                                             (return id sub createdAt updatedAt factoryId cards expiresAt title description))))
      (model-add-set-method Deck () Remove (Optional Deck) ((id String))
                            (config (command (delete)
                                             (where (and (= id 'id) (= sub $sub)))
                                             (return id sub createdAt updatedAt factoryId cards expiresAt title description))))
      )

    (v1.1
      (create-type Photo)
      (type-add-field Photo id String)
      (type-add-field Photo uri String)
      (type-add-field Photo width Int)
      (type-add-field Photo height Int)
      (type-add-field Photo name (Optional String))

      (create-type PermissionStatement)
      (model-add-field PermissionStatement actions (Array String))
      (model-add-field PermissionStatement resource String)
      (model-add-field PermissionStatement effect Boolean)

      (create-model Permission permissions)
      (model-add-unique-field Permission sub String)
      (model-add-field Permission statements (Array PermissionStatement))
      (model-add-db-set-method Permission Create Permission ((sub String) (statements (Array PermissionStatement)))
                               (config (command (insert (sub 'sub) (statements 'statements))
                                                (return id sub statements))))
      (model-add-db-get-method Permission FindById (Optional Permission) ((id String))
                               (config (command (select id sub statements)
                                                (where (= id 'id)))))
      (model-add-db-get-method Permission FindBySub (Optional Permission) ((sub String))
                               (config (command (select id sub statements)
                                                (where (= sub 'sub)))))
      (model-add-get-method Permission () Find (Array Permission) ((after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub statements)
                                             (where (= sub $sub)))))
      (model-add-db-set-method Permission Update (Optional Permission) ((id String) (statements (Array PermissionStatement)))
                               (config (command (update (= statements 'statements))
                                                (where (and (= id 'id) (= sub $sub)))
                                                (return id sub statements))))
      (model-add-db-set-method Permission Remove (Optional Permission) ((id String))
                               (config (command (delete)
                                                (where (= id 'id))
                                                (return id sub statements))))

      ;(create-model Session sessions)
      ;(model-add-field Session sub String)
      ;(model-add-field Session expiresAt DateTime)
      ;(model-add-field Session statements (Array PermissionStatement))
      ;(model-add-db-set-method Session Create Session ((sub String) (expiresAt DateTime) (statements (Array PermissionStatement))))
      ;(model-add-db-get-method Session FindBySub (Optional Session) () (config (implicit sub)))
      ;(model-add-db-set-method Session RemoveBySub (Optional Session) () (config (implicit sub)))

      (create-type CommentItem)
      (type-add-readonly-field CommentItem id String (default $sequential))
      (type-add-readonly-field CommentItem createdAt DateTime (default $now))
      (type-add-readonly-field CommentItem updatedAt DateTime (default $now))
      (type-add-readonly-field CommentItem removed (Optional Boolean) (default #f))
      (type-add-readonly-field CommentItem likeCount Int (default 0))
      (type-add-readonly-field CommentItem sub String (default $sub))
      (type-add-copied-field CommentItem (user User) (sub sub user fields))
      (type-add-field CommentItem text String)

      (create-model CommentList commentLists)
      (model-add-unique-field CommentList parentId String)
      (model-add-field CommentList comments (Array CommentItem))
      (model-add-set-method CommentList () Create CommentList ((parentId String) (comments (Array CommentItem)))
                            (config (command (insert (parentId 'parentId) (comments 'comments))
                                             (return id parentId comments))))
      (model-add-set-method CommentList () Remove (Optional CommentList) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id parentId comments))))
      (model-add-get-method CommentList #f FindById (Optional CommentList) ((id String))
                            (config (orderby descending)
                                    (command (select id parentId comments)
                                             (where (= id 'id)))))
      (model-add-get-method CommentList #f FindByParentId (Optional CommentList) ((parentId String))
                            (config (orderby descending)
                                    (command (select id parentId comments)
                                             (where (= parentId 'parentId)))))
      (model-add-set-method CommentList () AppendComment (Optional CommentItem) ((id String) (comment CommentItem))
                            (config (command (update (= comments (push comment)))
                                             (where (= id 'id)))))
      (model-add-set-method CommentList () UpdateComment (Optional CommentItem) ((id String) (commentIndex Int) (comment CommentItem))
                            (config (command (update (= (at comments 'commentIndex) comment))
                                             (where (= id 'id)))
                                    (result comment)))

      (create-type Device)
      (type-add-field Device token String)
      (type-add-field Device createdAt DateTime)
      (type-add-field Device endpoint String)
      (type-add-field Device userAgent String)

      (create-model DeviceList deviceLists)
      (model-add-unique-field DeviceList chatIdentity String)
      (model-add-field DeviceList devices (Array Device))

      (model-add-db-set-method DeviceList Create DeviceList ((chatIdentity String) (devices (Array Device)))
                               (config (command (insert (chatIdentity 'chatIdentity) (devices 'devices))
                                                (return id chatIdentity devices))))
      (model-add-db-set-method DeviceList Update (Optional DeviceList) ((id String) (devices (Array Device)))
                               (config (command (update (= devices 'devices))
                                                (where (and (= id 'id)))
                                                (return id chatIdentity devices))))
      (model-add-db-set-method DeviceList Remove (Optional DeviceList) ((id String))
                               (config (command (delete)
                                                (where (and (= id 'id)))
                                                (return id chatIdentity devices))))
      (model-add-db-get-method DeviceList FindById (Optional DeviceList) ((id String))
                               (config (command (select id chatIdentity devices)
                                                (where (= id 'id)))))
      (model-add-db-get-method DeviceList FindByChatIdentity (Optional DeviceList) ((chatIdentity String))
                               (config (command (select id chatIdentity devices)
                                                (where (= chatIdentity 'chatIdentity)))))

      (model-add-set-custom-method DeviceList #f Register Device ((token String) (userAgent String) (chatIdentity String)) (config (command (insert))))
      (model-add-get-custom-method DeviceList () MyDevices (Array Device) ((chatIdentity String)))
      (model-add-set-custom-method DeviceList () Unregister (Optional Device) ((token String) (chatIdentity String)) (config (command (delete))))
      )

    (v1.2
      (create-user-model Dealership dealerships)
      (model-add-hidden-field Dealership locale String)
      (model-add-field Dealership chatIdentity String)
      (model-add-field Dealership name String)
      (model-add-field Dealership makes (Array String))
      (model-add-field Dealership address String)
      (model-add-field Dealership location (Optional Point))
      (model-add-field Dealership title (Optional String))
      (model-add-field Dealership profileUri (Optional String))
      (model-add-hidden-field Dealership priority Int)
      (create-unique-index Dealership (sub))
      (model-add-set-method Dealership () CreateOrFindBySub Dealership ((locale String) (chatIdentity String) (name String) (makes (Array String)) (address String) (location (Optional Point)) (title (Optional String)) (profileUri (Optional String)))
                            (config (command (insert (sub $sub) (createdAt $now) (updatedAt $now) (locale 'locale) (chatIdentity 'chatIdentity) (name 'name) (makes 'makes) (address 'address) (location 'location) (title 'title) (profileUri 'profileUri) (priority 1))
                                             (on (sub $sub))
                                             (return id sub createdAt updatedAt chatIdentity name makes address location title profileUri))))
      (model-add-set-method Dealership () Remove (Optional Dealership) ((id String))
                            (config (command (delete)
                                             (where (and (= id 'id) (= sub $sub)))
                                             (return id sub createdAt updatedAt chatIdentity name makes address location title profileUri))))
      (model-add-set-method Dealership (admins) AdminUpdate (Optional Dealership) ((id String) (name String) (makes (Array String)) (address String) (location (Optional Point)) (title (Optional String)) (profileUri (Optional String)))
                            (config (command (update (= name 'name) (= makes 'makes) (= address 'address) (= location 'location) (= title 'title) (= profileUri 'profileUri))
                                             (where (and (= id 'id)))
                                             (return id sub createdAt updatedAt chatIdentity name makes address location title profileUri))))
      (model-add-set-method Dealership () Update (Optional Dealership) ((id String) (name String) (makes (Array String)) (address String) (location (Optional Point)) (title (Optional String)) (profileUri (Optional String)))
                            (config (command (update (= name 'name) (= address 'address) (= location 'location) (= title 'title) (= profileUri 'profileUri))
                                             (where (and (= id 'id) (= sub $sub)))
                                             (return id sub createdAt updatedAt chatIdentity name makes address location title profileUri))))
      (model-add-get-method Dealership #f FindByIdIn (Array Dealership) ((ids (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt chatIdentity name makes address location title profileUri)
                                             (where (in id 'ids)))))
      (model-add-get-method Dealership #f FindById (Optional Dealership) ((id String))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt chatIdentity name makes address location title profileUri)
                                             (where (= id 'id)))))
      (model-add-get-method Dealership (admins) FindAll (Array Dealership) ((after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt chatIdentity name makes address location title profileUri))))
      (model-add-db-get-method Dealership Search (Array Dealership) ((location Point) (radiusMiles Int) (make (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                               (config (orderby descending)
                                       (cache-expire 60)
                                       (cache-key make location radiusMiles)
                                       (command (select id sub createdAt updatedAt chatIdentity name makes address location title profileUri)
                                                (where (and (<= (distanceSphere location 'location) (* 'radiusMiles 1609.34))
                                                            (ci-contains makes 'make))))))

      (create-model CarInventory carInventories)
      (model-add-hidden-field CarInventory key String)
      (model-add-field CarInventory make String)
      (model-add-field CarInventory dealer String)
      (model-add-field CarInventory order Int)
      (model-add-field CarInventory model String)
      (model-add-field CarInventory wholesalePrice String)
      (model-add-field CarInventory retailPrice String)
      (model-add-field CarInventory exteriorColor String)
      (model-add-field CarInventory interiorColor String)
      (model-add-field CarInventory status String)
      (model-add-field CarInventory chassis Int)
      (create-unique-index CarInventory (key))
      (create-index CarInventory (make))
      (create-index CarInventory (model))
      (create-index CarInventory (exteriorColor))
      (model-add-set-method CarInventory () Create CarInventory ((key String) (make String) (dealer String) (order Int) (model String) (wholesalePrice String) (retailPrice String) (exteriorColor String) (interiorColor String) (status String) (chassis Int))
                            (config (command (insert (key 'key) (make 'make) (dealer 'dealer) (order 'order) (model 'model) (wholesalePrice 'wholesalePrice) (retailPrice 'retailPrice) (exteriorColor 'exteriorColor) (interiorColor 'interiorColor) (status 'status) (chassis 'chassis))
                                             (return id make dealer order model wholesalePrice retailPrice exteriorColor interiorColor status chassis))))
      (model-add-set-method CarInventory () Remove (Optional CarInventory) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id make dealer order model wholesalePrice retailPrice exteriorColor interiorColor status chassis))))
      (model-add-set-method CarInventory () Update (Optional CarInventory) ((id String) (make (Optional String)) (dealer (Optional String)) (order (Optional Int)) (model (Optional String)) (wholesalePrice (Optional String)) (retailPrice (Optional String)) (exteriorColor (Optional String)) (interiorColor (Optional String)) (status (Optional String)) (chassis (Optional Int)))
                            (config (command (update (= wholesalePrice 'wholesalePrice) (= retailPrice 'retailPrice) (= exteriorColor 'exteriorColor) (= interiorColor 'interiorColor) (= status 'status) (= chassis 'chassis))
                                             (where (= id 'id))
                                             (return id make dealer order model wholesalePrice retailPrice exteriorColor interiorColor status chassis))))
      (model-add-get-method CarInventory #f FindById (Optional CarInventory) ((id String))
                            (config (orderby descending)
                                    (command (select id make dealer order model wholesalePrice retailPrice exteriorColor interiorColor status chassis)
                                             (where (= id 'id)))))
      (model-add-get-method CarInventory () Models (Array CarInventory) ((makes (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key makes)
                                    (orderby descending)
                                    (command (select (min id) (min make) (min dealer) (min order) model (min wholesalePrice) (min retailPrice) (min exteriorColor) (min interiorColor) (min status) (min chassis))
                                             (where (in make 'makes))
                                             (groupby model))))
      (model-add-get-method CarInventory () Colors (Array CarInventory) ((makes (Array String)) (model (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key makes model)
                                    (orderby descending)
                                    (command (select (min id) (min make) (min dealer) (min order) (min model) (min wholesalePrice) (min retailPrice) exteriorColor (min interiorColor) (min status) (min chassis))
                                             (where (and (in make 'makes) (= model 'model)))
                                             (groupby exteriorColor))))
      (model-add-get-method CarInventory () UniqueModels (Array String) ((makes (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key makes)
                                    ;(orderby descending)
                                    (command (select (distinct model))
                                             (where (in make 'makes)))))
      (model-add-get-method CarInventory () UniqueColors (Array String) ((makes (Array String)) (model (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key makes model)
                                    ;(orderby descending)
                                    (command (select (distinct exteriorColor))
                                             (where (and (in make 'makes) (= model 'model))))))
      (model-add-get-method CarInventory () Search (Array CarInventory) ((makes (Array String)) (model (Optional String)) (exteriorColor (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key model exteriorColor)
                                    (command (select id make dealer order model wholesalePrice retailPrice exteriorColor interiorColor status chassis)
                                             (where (and (in make 'makes) (= (lower exteriorColor) (lower 'exteriorColor)) (= (lower model) (lower 'model)))))))

      (create-model CarInfo carInfos)
      (model-add-field CarInfo year String)
      (model-add-field CarInfo make String)
      (model-add-field CarInfo model String)
      (model-add-field CarInfo color String)
      (create-unique-index CarInfo (year make model color))
      (create-index CarInfo (year))
      (create-index CarInfo (make))
      (create-index CarInfo (model))
      (create-index CarInfo (color))
      (model-add-set-method CarInfo () Create CarInfo ((year String) (make String) (model String) (color String))
                            (config (command (insert (year 'year) (make 'make) (model 'model) (color 'color))
                                             (return id year make model color))))
      (model-add-set-method CarInfo () Remove (Optional CarInfo) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id year make model color))))
      (model-add-get-method CarInfo #f FindAll (Array CarInfo) ((after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (orderby descending)
                                    (command (select id year make model color))))
      (model-add-get-method CarInfo #f Makes (Array CarInfo) ((after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (orderby descending)
                                    (command (select (min id) (min year) make (min model) (min color))
                                             (groupby make))))
      (model-add-get-method CarInfo #f Models (Array CarInfo) ((make (Optional String)) (year (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key make year)
                                    (orderby descending)
                                    (command (select (min id) (min year) (min make) model (min color))
                                             (where (and (= (lower make) (lower 'make)) (= (lower year) (lower 'year))))
                                             (groupby model))))
      (model-add-get-method CarInfo #f Years (Array CarInfo) ((after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (orderby descending)
                                    (command (select (min id) year (min make) (min model) (min color))
                                             (groupby year))))
      (model-add-get-method CarInfo #f Colors (Array CarInfo) ((models (Array String)) (make (Optional String)) (year (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key make models year)
                                    (orderby descending)
                                    (command (select (min id) (min year) (min make) (min model) color)
                                             (where (and (= (lower make) (lower 'make)) (in model 'models) (= (lower year) (lower 'year))))
                                             (groupby color))))

      (model-add-get-method CarInfo #f UniqueMakes (Array String) ((after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    ;(orderby descending)
                                    (command (select (distinct make)))))
      (model-add-get-method CarInfo #f UniqueModels (Array String) ((make (Optional String)) (year (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key make year)
                                    ;(orderby descending)
                                    (command (select (distinct model))
                                             (where (and (= (lower make) (lower 'make)) (= (lower year) (lower 'year)))))))
      (model-add-get-method CarInfo #f UniqueYears (Array String) ((after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (orderby descending)
                                    (command (select (distinct year)))))
      (model-add-get-method CarInfo #f UniqueColors (Array String) ((models (Array String)) (make (Optional String)) (year (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (cache-expire 60)
                                    (cache-key make models year)
                                    ;(orderby descending)
                                    (command (select (distinct color))
                                             (where (and (= (lower make) (lower 'make)) (in model 'models) (= (lower year) (lower 'year)))))))

      (create-user-model Seller sellers)
      (model-add-foreign-field Seller dealership (Dealership id ()))
      (model-add-hidden-field Seller locale String)
      (model-add-field Seller chatIdentity String)
      (model-add-field Seller name String)
      (model-add-readonly-field Seller rating Float)
      (model-add-readonly-field Seller numVotes Int)
      (model-add-field Seller yearsOfExp Int)
      (model-add-field Seller bio String)
      (model-add-field Seller available Boolean)
      (model-add-field Seller profileUri (Optional String))
      (create-unique-index Seller (sub))
      (create-index Seller (dealershipId))
      (model-add-set-method Seller () CreateOrFindBySub Seller ((dealershipId String) (locale String) (chatIdentity String) (name String) (yearsOfExp Int) (bio String) (available Boolean) (profileUri (Optional String)))
                            (config (command (insert (sub $sub) (createdAt $now) (updatedAt $now) (dealershipId 'dealershipId) (locale 'locale) (chatIdentity 'chatIdentity) (name 'name) (rating 0) (numVotes 0) (yearsOfExp 'yearsOfExp) (bio 'bio) (available 'available) (profileUri 'profileUri))
                                             (on (sub $sub))
                                             (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri))))
      (model-add-set-method Seller () Remove (Optional Seller) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri))))
      (model-add-set-method Seller () Update (Optional Seller) ((id String) (dealershipId (Optional String)) (name (Optional String)) (yearsOfExp (Optional Int)) (bio (Optional String)) (available (Optional Boolean)) (profileUri (Optional String)))
                            (config (command (update (= dealershipId 'dealershipId) (= name 'name) (= yearsOfExp 'yearsOfExp) (= bio 'bio) (= available 'available) (= profileUri 'profileUri))
                                             (where (= id 'id))
                                             (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri))))
      (model-add-get-method Seller #f FindById (Optional Seller) ((id String))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri)
                                             (where (= id 'id)))))
      (model-add-db-get-method Seller FindByIdIn (Array Seller) ((ids (Array String)) (after (Optional String)) (count (Optional Int) 50))
                               (config (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri)
                                                (where (in id 'ids)))))
      (model-add-db-get-method Seller FindByDealershipIdIn (Array Seller) ((dealershipIds (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri disabled)
                                             (where (in dealershipId 'dealershipIds)))))
      (model-add-get-custom-method Seller #f Search (Array Seller) ((location Point) (radiusMiles Int) (make (Optional String)) (after (Optional String)) (count (Optional Int) 50)))
      (model-add-get-method Seller () FindByDealershipId (Array Seller) ((dealershipId String) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri)
                                             (where (= dealershipId 'dealershipId)))))
      (model-add-db-set-method Seller Rate (Optional Seller) ((id String) (rating Int))
                               (config (command (update (= rating (+ rating 'rating)) (= numVotes (+ numVotes 1)))
                                                (where (= id 'id))
                                                (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri))))

      (create-user-model Note notes)
      (model-add-unique-field Note uniqueName String)
      (model-add-field Note text String)
      (model-add-set-method Note () Create Note ((uniqueName String) (text String))
                            (config (command (insert (sub $sub) (createdAt $now) (updatedAt $now) (uniqueName 'uniqueName) (text 'text))
                                             (return id sub createdAt updatedAt uniqueName text))))
      (model-add-set-method Note () Remove (Optional Note) ((id String))
                            (config (command (delete)
                                             (where (= id 'id))
                                             (return id sub createdAt updatedAt uniqueName text))))
      (model-add-set-method Note () Update (Optional Note) ((id String) (text String))
                            (config (command (update (= text 'text))
                                             (where (= id 'id))
                                             (return id sub createdAt updatedAt uniqueName text))))
      (model-add-get-method Note () FindById (Optional Note) ((id String))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt uniqueName text)
                                             (where (= id 'id)))))
      (model-add-get-method Note () FindByUniqueName (Optional Note) ((uniqueName String))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt uniqueName text)
                                             (where (= uniqueName 'uniqueName)))))
      (model-add-set-method Note () CreateOrUpdateByUniqueName Note ((uniqueName String) (text String))
                            (config (command (insert (sub $sub) (createdAt $now) (updatedAt $now) (uniqueName 'uniqueName) (text 'text))
                                             (on (uniqueName 'uniqueName))
                                             (update (= text 'text) (= updatedAt $now))
                                             (return id sub createdAt updatedAt uniqueName text))))
      )

    (v1.3)

    (v1.4
      (model-add-field Seller disabled (Optional Boolean) (default #f))
      (model-add-field Seller location (Optional Point) (default ()))

      (model-add-db-get-method Seller FindNonDisabledByDealershipIdIn (Array Seller) ((dealershipIds (Array String)) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (cache-key dealershipIds)
                                    (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri)
                                             (where (and (in dealershipId 'dealershipIds) (= disabled #f))))))

      (create-type Distanced)
      (type-add-field Distanced distance Float)

      (model-add-db-get-method Dealership SearchByDistance (Array (+ Dealership Distanced)) ((location Point) (make (Optional String)) (after (Optional String)) (count (Optional Int) 50))
                               (config (orderby descending)
                                       (cache-expire 60)
                                       (cache-key make location)
                                       (command (select id sub createdAt updatedAt chatIdentity name makes address location title profileUri
                                                        (as (* (distanceSphere location 'location) 0.000621371) distance))
                                                (where (and (<= (distanceSphere location 'location) (* 3000 1609.34))
                                                            (ci-contains makes 'make)))
                                                (orderby (distanceSphere location 'location)))))

      (model-add-get-custom-method Seller #f SearchByDistance (Array Seller) ((location Point) (make (Optional String)) (after (Optional String)) (count (Optional Int) 50)))

      (model-add-get-method Seller () FindByDealershipIdV2 (Array Seller) ((dealershipId String) (after (Optional String)) (count (Optional Int) 50))
                            (config (orderby descending)
                                    (command (select id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri disabled location)
                                             (where (= dealershipId 'dealershipId)))))

      (service-add-set-method System (dealership) InviteUserV2 (Optional PendingSeller) ((newUsername String) (email String) (locale String) (dealershipId String) (action (Optional String))))
      (service-add-get-method System (dealership) GetPendingSellers (Array PendingSeller) ((dealershipId String) (after (Optional String)) (count (Optional Int) 50)))

      (model-add-db-set-method Seller SetDisabled (Optional Seller) ((id String) (dealershipId String) (disabled Boolean))
                               (config (command (update (= disabled 'disabled))
                                                (where (and (= id 'id) (= dealershipId 'dealershipId)))
                                                (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri disabled))))
      (model-add-set-custom-method Seller (dealership) SetDisabled (Optional Seller) ((id String) (dealershipId String) (disabled Boolean))
                                (config (command (update (= disabled 'disabled))
                                                 (where (and (= id 'id) (= dealershipId 'dealershipId)))
                                                 (return id sub createdAt updatedAt dealershipId chatIdentity name rating numVotes yearsOfExp bio available profileUri disabled))))
      )

    ;(v1.5
      ;(destroy-unique-index Seller (sub)) ; if index was created with unique, must destroy with unique
      ;(create-unique-index Seller (sub dealershipId))
      ;)

    )))
