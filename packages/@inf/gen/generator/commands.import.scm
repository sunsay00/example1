(module commands (command->filter command->returns command-special? command-special-sub? command-arg-sub?)
  (import scheme chicken data-structures matchable)
  (require-extension srfi-13 srfi-1)

  (define (command-special? x) (and (symbol? x) (char=? (car (string->list (symbol->string x))) #\$)))
  (define (command-special-sub? x) (eq? x '$sub))
  (define (command-arg-sub? x) (match x (''sub #t) (else #f)))

  (define (sp-where-term fn a b)
    (cond
      ((fn a) (list b))
      ((fn b) (list a))
      (else '())))

  (define (sp-where fn expr)
    (match expr
           (('and . r)
            (foldr (lambda (i sum)
                     (let ((r (sp-where fn i)))
                       (if (null? r) sum (append r sum)))) '() r))
           (('= a b) (sp-where-term fn a b))
           (('<= a b) (sp-where-term fn a b))
           (('>= a b) (sp-where-term fn a b))
           (('< a b) (sp-where-term fn a b))
           (('> a b) (sp-where-term fn a b))
           (('like a b) (sp-where-term fn a b))
           (('contains a b) (sp-where-term fn a b))
           (('ci-contains a b) (sp-where-term fn a b))
           (('in x ids) '())
           (else (error "(commands.import.sp-where) no match" expr))))

  (define (command->filter fn cmd)
    (match (cons 'command cmd)
           (`(command (select . ,ss) (orderby . ,os)) '())
           (`(command (select . ,ss) (where ,w) (orderby . ,os)) '())
           (`(command (select . ,ss)) '())
           (`(command (select . ,ss) (where ,w))
             (sp-where fn w))
           (`(command (insert . ,vs) . ,rest)
             (map car (filter (lambda (p) (fn (cadr p))) vs)))
           (`(command (delete) (where ,w) . ,rest)
             (sp-where fn w))
           (`(command (update . ,ss) (where ,w) . ,rest)
             (sp-where fn w))
           (`(command (select . ,ss) (groupby . ,gs)) '())
           (`(command (select . ,ss) (where ,w) (groupby . ,gs))
             (sp-where fn w))
           (else (error "(commands.import.filter) no match" cmd))))

  (define (command->returns cmd)
    (define (ev-select-term term)
      (match term
             (`(min ,x) x)
             (x x)))
    (match (cons 'command cmd)
           (`(command (select . ,ss) . ,rest)
             (map ev-select-term ss))
           (`(command (insert . ,vs) (return . ,rs))
             rs)
           (`(command (insert . ,vs) (on . ,os) (return . ,rs))
             rs)
           (`(command (insert . ,vs) (on . ,os) (update . ,ss) (return . ,rs))
             rs)
           (`(command (update . ,ss) (where ,w) (return . ,rs))
             rs)
           (`(command (delete) (where ,w) (return . ,rs))
             rs)
           (else (error "(commands.import.returns) no match" cmd))))
  )
