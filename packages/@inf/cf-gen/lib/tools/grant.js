Object.defineProperty(exports, "__esModule", { value: true });
exports.grant = function (groups) {
    return function (target, propertyKey, descriptor) {
        var method = descriptor.value;
        if (method === undefined) {
            throw new Error('this decorator only works on methods');
        }
        descriptor.value = function () {
            var $ctx = arguments[0];
            if ($ctx == undefined) {
                throw new Error('unable to grant permissions, invalid $ctx object detected. are you passing the $ctx as the first parameter to the grant method?');
            }
            else if (!$ctx || !$ctx.groups || $ctx.groups.length === undefined ||
                !groups.reduce(function (r, p) { return r && !!$ctx && !!$ctx.groups && $ctx.groups.indexOf(p) !== -1; }, true)) {
                throw new Error("unauthorized access - required: " + JSON.stringify(groups) + ", available: " + JSON.stringify($ctx ? ($ctx.groups) : undefined));
            }
            return method.apply(this, arguments);
        };
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi90b29scy9ncmFudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBSWEsUUFBQSxLQUFLLEdBQUcsVUFBQyxNQUFlO0lBQ25DLE9BQU8sVUFBQyxNQUFXLEVBQUUsV0FBbUIsRUFBRSxVQUE4RDtRQUN0RyxJQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO1FBQ2hDLElBQUksTUFBTSxLQUFLLFNBQVMsRUFBRTtZQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLHNDQUFzQyxDQUFDLENBQUM7U0FDekQ7UUFDRCxVQUFVLENBQUMsS0FBSyxHQUFHO1lBQ2pCLElBQU0sSUFBSSxHQUFpQixTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEMsSUFBSSxJQUFJLElBQUksU0FBUyxFQUFFO2dCQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLGlJQUFpSSxDQUFDLENBQUM7YUFDcEo7aUJBQU0sSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssU0FBUztnQkFDbEUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSyxPQUFBLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUE3RCxDQUE2RCxFQUFFLElBQUksQ0FBQyxFQUFFO2dCQUMvRixNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFtQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxxQkFBZ0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUcsQ0FBQyxDQUFDO2FBQzlJO1lBQ0QsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUM7SUFDSixDQUFDLENBQUE7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJVXNlckNvbnRleHQgfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCB0eXBlIEdyb3VwID0gJ2d1ZXN0cycgfCAndGVzdGVycycgfCAnYnV5ZXJzJyB8ICdzYWxlcycgfCAnZGVhbGVyc2hpcCcgfCAnYWRtaW5zJyB8ICdfX3Bvc3Rjb25maXJtX18nO1xuXG5leHBvcnQgY29uc3QgZ3JhbnQgPSAoZ3JvdXBzOiBHcm91cFtdKSA9PiB7XG4gIHJldHVybiAodGFyZ2V0OiBhbnksIHByb3BlcnR5S2V5OiBzdHJpbmcsIGRlc2NyaXB0b3I6IFR5cGVkUHJvcGVydHlEZXNjcmlwdG9yPCguLi5wYXJhbXM6IGFueVtdKSA9PiBhbnk+KSA9PiB7XG4gICAgY29uc3QgbWV0aG9kID0gZGVzY3JpcHRvci52YWx1ZTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcigndGhpcyBkZWNvcmF0b3Igb25seSB3b3JrcyBvbiBtZXRob2RzJyk7XG4gICAgfVxuICAgIGRlc2NyaXB0b3IudmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCAkY3R4OiBJVXNlckNvbnRleHQgPSBhcmd1bWVudHNbMF07XG4gICAgICBpZiAoJGN0eCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bmFibGUgdG8gZ3JhbnQgcGVybWlzc2lvbnMsIGludmFsaWQgJGN0eCBvYmplY3QgZGV0ZWN0ZWQuIGFyZSB5b3UgcGFzc2luZyB0aGUgJGN0eCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyIHRvIHRoZSBncmFudCBtZXRob2Q/Jyk7XG4gICAgICB9IGVsc2UgaWYgKCEkY3R4IHx8ICEkY3R4Lmdyb3VwcyB8fCAkY3R4Lmdyb3Vwcy5sZW5ndGggPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAhZ3JvdXBzLnJlZHVjZSgociwgcCkgPT4gciAmJiAhISRjdHggJiYgISEkY3R4Lmdyb3VwcyAmJiAkY3R4Lmdyb3Vwcy5pbmRleE9mKHApICE9PSAtMSwgdHJ1ZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGB1bmF1dGhvcml6ZWQgYWNjZXNzIC0gcmVxdWlyZWQ6ICR7SlNPTi5zdHJpbmdpZnkoZ3JvdXBzKX0sIGF2YWlsYWJsZTogJHtKU09OLnN0cmluZ2lmeSgkY3R4ID8gKCRjdHguZ3JvdXBzKSA6IHVuZGVmaW5lZCl9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbWV0aG9kLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfVxufTtcbiJdfQ==